{"version":3,"sources":["hooks/requests.js","hooks/context.js","components/DisplayFreeSlots.js","components/Layout.js","components/Search.js","components/DeleteCustomer.js","components/CustomerCard.js","components/DisplayCustomers.js","pages/DisplayHomePage.js","pages/AddCustomer.js","pages/History.js","App.js","index.js"],"names":["API_URL","httpGetMaxSlots","a","fetch","response","json","httpGetWaitlist","httpAddCustomer","formData","method","headers","body","JSON","stringify","ok","httpRemoveCustomer","ticketNumber","httpGetHistory","httpRemoveHistory","ticketNumbers","avatarColors","pink","lime","indigo","orange","teal","WaitlistContext","React","WaitlistProvider","children","waitlist","setWaitlist","maxSlots","setMaxSlots","history","setHistory","getMaxSlots","fetchedMaxSlots","getWaitlist","fetchedWaitlist","addCustomer","removeCustomer","getHistory","fetchedHistory","removeHistory","value","Provider","useWaitlist","context","Error","displayName","statusColors","lull","lessBusy","busy","veryBusy","maxed","useStyles","makeStyles","theme","paper","textAlign","backgroundColor","status","height","width","lineHeight","fontSize","fontWeight","containerStyles","display","alignItems","marginLeft","DisplayFreeSlots","freeSlots","length","classes","style","Typography","variant","paddingRight","Paper","className","drawerWidth","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","justifyContent","padding","mixins","content","flexGrow","appbar","alignSelf","Layout","useTheme","useHistory","open","setOpen","menuItems","title","icon","path","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","onClick","edge","noWrap","Drawer","direction","Divider","List","map","item","index","ListItem","button","push","ListItemIcon","ListItemText","primary","margin","Search","props","TextField","placeholder","InputProps","startAdornment","InputAdornment","top","left","transform","borderRadius","boxShadow","shadows","marginTop","cancelBtn","border","paddingTop","paddingBottom","DeleteCustomer","firstName","handleClose","id","align","Button","size","e","Modal","disableEnforceFocus","onClose","maxWidth","grey","expand","shortest","expandOpen","expandText","avatar","createData","key","CustomerCard","customer","lastName","contactNumber","notes","metaData","startTime","endTime","avatarColor","expanded","setExpanded","avatarInitial","toString","toUpperCase","startDate","Date","endDate","waitingTime","Math","round","rows","toLocaleString","Card","elevation","CardHeader","Avatar","action","subheader","CardContent","wordBreak","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","TableContainer","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","row","component","scope","DisplayCustomers","handleDelete","breakpointCols","default","columnClassName","DisplayHomePage","setValue","filter","setFilter","name","filterValue","toLowerCase","trim","includes","text","flexWrap","flexDirection","onChange","target","form","container","initialForm","initialFill","AddCustomer","setFormData","isFilled","setIsFilled","error","setError","isNoSlots","setIsNoSlots","handleChange","Container","gutterBottom","noValidate","autoComplete","onSubmit","preventDefault","setTimeout","Object","values","some","field","floor","random","label","fullWidth","required","helperText","multiline","type","startIcon","endIcon","palette","background","History","useState","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","splice","useEffect","dense","labelId","ListItemAvatar","secondary","ListItemSecondaryAction","Checkbox","inputProps","createTheme","main","red","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b23e1c09.chunk.js","sourcesContent":["// for production\nconst API_URL = 'v1'\n\n// for local testing\n// const API_URL = 'http://localhost:8000/v1'\n\nasync function httpGetMaxSlots() {\n  const response = await fetch(`${API_URL}/waitlist/maxslots`)\n  return await response.json()\n}\n\nasync function httpGetWaitlist() {\n  const response = await fetch(`${API_URL}/waitlist`)\n  return await response.json()\n}\n\nasync function httpAddCustomer(formData) {\n  try {\n    return await fetch(`${API_URL}/waitlist`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n  } catch (error) {\n    return { ok: false }\n  }\n}\n\nasync function httpRemoveCustomer(ticketNumber) {\n  try {\n    return await fetch(`${API_URL}/waitlist/${ticketNumber}`, {\n      method: 'delete',\n    })\n  } catch (error) {\n    return { ok: false }\n  }\n}\n\nasync function httpGetHistory() {\n  const response = await fetch(`${API_URL}/waitlist/history`)\n  return await response.json()\n}\n\nasync function httpRemoveHistory(ticketNumbers) {\n  try {\n    return await fetch(`${API_URL}/waitlist/history`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(ticketNumbers),\n    })\n  } catch (error) {\n    return { ok: false }\n  }\n}\n\nexport {\n  httpGetWaitlist,\n  httpAddCustomer,\n  httpRemoveCustomer,\n  httpGetHistory,\n  httpRemoveHistory,\n  httpGetMaxSlots,\n}\n","import * as React from 'react'\nimport {\n  httpGetWaitlist,\n  httpAddCustomer,\n  httpRemoveCustomer,\n  httpGetHistory,\n  httpRemoveHistory,\n  httpGetMaxSlots,\n} from './requests'\n\nimport { pink, lime, indigo, orange, teal } from '@material-ui/core/colors'\nconst avatarColors = [pink[500], lime[500], indigo[500], orange[500], teal[500]]\n\nconst WaitlistContext = React.createContext()\nWaitlistContext.displayName = 'WaitlistContext'\n\nfunction WaitlistProvider({ children }) {\n  const [waitlist, setWaitlist] = React.useState([])\n  const [maxSlots, setMaxSlots] = React.useState(25)\n  const [history, setHistory] = React.useState([])\n\n  const getMaxSlots = React.useCallback(async () => {\n    const fetchedMaxSlots = await httpGetMaxSlots()\n    setMaxSlots(fetchedMaxSlots)\n  }, [])\n\n  const getWaitlist = React.useCallback(async () => {\n    const fetchedWaitlist = await httpGetWaitlist()\n    setWaitlist(fetchedWaitlist)\n  }, [])\n\n  const addCustomer = React.useCallback(\n    async (formData) => {\n      await httpAddCustomer(formData)\n      getWaitlist()\n    },\n    [getWaitlist]\n  )\n\n  const removeCustomer = React.useCallback(\n    async (ticketNumber) => {\n      await httpRemoveCustomer(ticketNumber)\n      getWaitlist()\n    },\n    [getWaitlist]\n  )\n\n  const getHistory = React.useCallback(async () => {\n    const fetchedHistory = await httpGetHistory()\n    setHistory(fetchedHistory)\n  }, [])\n\n  const removeHistory = React.useCallback(\n    async (ticketNumbers) => {\n      await httpRemoveHistory(ticketNumbers)\n      getHistory()\n    },\n    [getHistory]\n  )\n\n  React.useEffect(() => {\n    getMaxSlots()\n  }, [getMaxSlots])\n\n  React.useEffect(() => {\n    getWaitlist()\n  }, [getWaitlist])\n\n  React.useEffect(() => {\n    getHistory()\n  }, [getHistory, waitlist])\n\n  const value = { maxSlots, waitlist, history, addCustomer, removeCustomer, removeHistory }\n\n  return <WaitlistContext.Provider value={value}>{children}</WaitlistContext.Provider>\n}\n\nfunction useWaitlist() {\n  const context = React.useContext(WaitlistContext)\n  if (!context) {\n    throw new Error(`useWaitlist must be used within the WaitlistProvider`)\n  }\n  return context\n}\n\nexport { WaitlistProvider, useWaitlist, avatarColors }\n","import * as React from 'react'\nimport { useWaitlist } from '../hooks/context'\n\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst statusColors = {\n  lull: '#00897b',\n  lessBusy: '#7cb342',\n  busy: '#fdd835',\n  veryBusy: '#fb8c00',\n  maxed: '#e53935',\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: 'center',\n    backgroundColor: ({ status }) => {\n      return statusColors[status]\n    },\n    height: 40,\n    width: 40,\n    lineHeight: '40px',\n    fontSize: 25,\n    fontWeight: 600,\n  },\n}))\n\nconst containerStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n}\n\nexport default function DisplayFreeSlots() {\n  const { maxSlots, waitlist } = useWaitlist()\n  const freeSlots = maxSlots - waitlist.length\n\n  const status =\n    freeSlots < 6\n      ? 'maxed'\n      : freeSlots < 11\n      ? 'veryBusy'\n      : freeSlots < 16\n      ? 'busy'\n      : freeSlots < 21\n      ? 'lessBusy'\n      : 'lull'\n  const classes = useStyles({ status })\n\n  return (\n    <div style={containerStyles}>\n      <Typography variant='h6' style={{ paddingRight: 15 }}>\n        Free Slots\n      </Typography>\n      <Paper className={classes.paper}>{freeSlots}</Paper>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport { useHistory } from 'react-router-dom'\nimport DisplayFreeSlots from './DisplayFreeSlots'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport HistoryIcon from '@material-ui/icons/History'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  appbar: {\n    alignSelf: 'stretch',\n    height: 'auto',\n  },\n}))\n\n// add search\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const menuItems = [\n    {\n      title: 'Dashboard',\n      icon: <DashboardIcon />,\n      path: '/',\n    },\n    {\n      title: 'Add Customer',\n      icon: <AddCircleIcon />,\n      path: '/addcustomer',\n    },\n    {\n      title: 'History',\n      icon: <HistoryIcon />,\n      path: '/history',\n    },\n  ]\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar className={classes.appBar}>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h5' noWrap>\n            Hotel California\n          </Typography>\n          <DisplayFreeSlots />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant='permanent'\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {menuItems.map((item, index) => (\n            <ListItem button key={item.title} onClick={() => history.push(item.path)}>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  )\n}\n","/* eslint-disable no-use-before-define */\nimport * as React from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    width: '100%',\n    padding: '10px 0',\n    [theme.breakpoints.up('sm')]: {\n      width: '40%',\n    },\n  },\n}))\n\nexport default function Search(props) {\n  const classes = useStyles()\n  return (\n    <TextField\n      className={classes.root}\n      variant='outlined'\n      margin='normal'\n      placeholder='Search'\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position='start'>\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport { useWaitlist } from '../hooks/context'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Modal from '@material-ui/core/Modal'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    backgroundColor: '#fff',\n    borderRadius: '5px',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4, 3),\n  },\n  button: {\n    width: 150,\n    padding: 10,\n    marginTop: 10,\n  },\n  cancelBtn: {\n    backgroundColor: 'white',\n    border: '1px solid grey',\n  },\n  title: {\n    paddingTop: 15,\n    paddingBottom: 5,\n  },\n}))\n\nexport default function DeleteCustomer({ ticketNumber, firstName }) {\n  const classes = useStyles()\n  const { removeCustomer } = useWaitlist()\n  const [open, setOpen] = React.useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleDelete = (e) => {\n    removeCustomer(ticketNumber)\n    setOpen(false)\n  }\n\n  const body = (\n    <Paper className={classes.paper}>\n      <Typography className={classes.title} variant='h6' id='delete-customer-card' align='center'>\n        Have you finished serving {firstName}?\n      </Typography>\n      <Typography\n        style={{ padding: '20px 0px' }}\n        variant='body1'\n        id='remove-customer-from-waitlist'\n        align='center'\n      >\n        {firstName} will be removed from the queue\n      </Typography>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <Button\n          className={clsx(classes.button, classes.cancelBtn)}\n          variant='contained'\n          size='large'\n          onClick={handleClose}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={classes.button}\n          color='primary'\n          variant='contained'\n          size='large'\n          onClick={handleDelete}\n        >\n          Done\n        </Button>\n      </div>\n    </Paper>\n  )\n\n  return (\n    <>\n      <IconButton aria-label='delete' onClick={handleOpen}>\n        <DeleteIcon />\n      </IconButton>\n      <Modal\n        disableEnforceFocus\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='delete-customer-card'\n        aria-describedby='remove-customer-from-waitlist'\n      >\n        {body}\n      </Modal>\n    </>\n  )\n}\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport DeleteCustomer from './DeleteCustomer'\nimport { avatarColors } from '../hooks/context'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { grey } from '@material-ui/core/colors'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone'\nimport NotesIcon from '@material-ui/icons/Notes'\nimport TimerIcon from '@material-ui/icons/Timer'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)',\n    '&:hover': {\n      backgroundColor: grey[50],\n    },\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  expandText: {\n    marginLeft: '68%',\n  },\n  avatar: {\n    backgroundColor: (color) => {\n      return avatarColors[color]\n    },\n  },\n}))\n\nfunction createData(key, value) {\n  if (!value) value = '-'\n  return { key, value }\n}\n\nexport default function CustomerCard({ customer }) {\n  const { firstName, lastName, contactNumber, notes, metaData } = customer\n  const { startTime, endTime, ticketNumber, avatarColor } = metaData\n\n  const classes = useStyles(avatarColor)\n  const [expanded, setExpanded] = React.useState(false)\n\n  const avatarInitial = firstName.toString()[0].toUpperCase()\n  const startDate = new Date(startTime)\n  const endDate = endTime ? new Date(endTime) : new Date()\n  const waitingTime = Math.round((endDate - startDate) / 1000 / 60)\n\n  const rows = [\n    createData('Start Time', startDate.toLocaleString()),\n    createData('End Time', endTime ? endDate.toLocaleString() : ''),\n    createData('Ticket no.', ticketNumber),\n  ]\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card className={classes.root} elevation={1}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label='customer' className={classes.avatar}>\n            {avatarInitial}\n          </Avatar>\n        }\n        action={\n          <DeleteCustomer\n            ticketNumber={ticketNumber}\n            waitingTime={waitingTime}\n            firstName={firstName}\n          />\n        }\n        title={firstName + ' ' + lastName}\n        subheader={startDate.toLocaleString()}\n      />\n      <CardContent style={{ paddingBottom: 0 }}>\n        <div style={{ display: 'flex', alignItems: 'center', paddingBottom: '10px' }}>\n          <ContactPhoneIcon style={{ marginLeft: 7 }} />\n          <Typography variant='body2' style={{ marginLeft: 24 }}>\n            {contactNumber}\n          </Typography>\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', paddingBottom: '10px' }}>\n          <TimerIcon style={{ marginLeft: 7 }} />\n          <Typography variant='body2' style={{ marginLeft: 24 }}>\n            Waited for {waitingTime} mins\n          </Typography>\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <NotesIcon style={{ marginLeft: 7, alignSelf: 'flex-start' }} />\n          <Typography\n            variant='body2'\n            style={{ marginLeft: 24, marginRight: 40, wordBreak: 'break-word' }}\n          >\n            {notes || '-'}\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Typography variant='body2' className={classes.expandText}>\n          Details\n        </Typography>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label='show more'\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout='auto' unmountOnExit>\n        <CardContent>\n          <TableContainer>\n            <Table sx={{ minWidth: 650 }} aria-label='simple table'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Metadata</TableCell>\n                  <TableCell align='right'>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow\n                    key={row.key}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell component='th' scope='row'>\n                      {row.key}\n                    </TableCell>\n                    <TableCell align='right' style={{ width: 200 }}>\n                      {row.value}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Collapse>\n    </Card>\n  )\n}\n","import * as React from 'react'\nimport Masonry from 'react-masonry-css'\nimport CustomerCard from '../components/CustomerCard'\n\nexport default function DisplayCustomers({ waitlist }) {\n  const handleDelete = () => {}\n\n  const breakpoints = {\n    default: 6,\n    2500: 5,\n    1900: 4,\n    1500: 3,\n    1100: 2,\n    700: 1,\n  }\n\n  return (\n    <Masonry\n      breakpointCols={breakpoints}\n      className='my-masonry-grid'\n      columnClassName='my-masonry-grid_column'\n    >\n      {waitlist.map((customer) => {\n        return (\n          <div key={customer.metaData.ticketNumber}>\n            <CustomerCard customer={customer} handleDelete={handleDelete} />\n          </div>\n        )\n      })}\n    </Masonry>\n  )\n}\n","import * as React from 'react'\nimport { useWaitlist } from '../hooks/context'\nimport Search from '../components/Search'\n\nimport Typography from '@material-ui/core/Typography'\nimport DisplayCustomers from '../components/DisplayCustomers'\n\nexport default function DisplayHomePage() {\n  const { waitlist } = useWaitlist()\n  const [value, setValue] = React.useState('')\n  const [filter, setFilter] = React.useState([])\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  React.useEffect(() => {\n    setFilter(\n      waitlist.filter((customer) => {\n        const { firstName, lastName, contactNumber, notes } = customer\n        const name = firstName + ' ' + lastName\n        const filterValue = value.toLowerCase().trim()\n\n        return (\n          name?.toString().toLowerCase().includes(filterValue) ||\n          contactNumber?.toString().toLowerCase().includes(filterValue) ||\n          notes?.toString().toLowerCase().includes(filterValue)\n        )\n      })\n    )\n  }, [waitlist, value])\n\n  const text =\n    waitlist.length === 1\n      ? `There is ${waitlist.length} customer in queue.`\n      : `There are ${waitlist.length} customers in queue.`\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n          paddingBottom: '10px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n          }}\n        >\n          <Typography variant='h4' style={{ marginRight: '15px' }}>\n            Welcome!\n          </Typography>\n          <Typography variant='body1'>{text}</Typography>\n        </div>\n        <Search\n          value={value}\n          onChange={handleChange}\n          placeholder='Search by Name, Contact Number or Notes'\n        />\n      </div>\n      <DisplayCustomers waitlist={filter} style={{ paddingTop: '10px' }} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { useWaitlist } from '../hooks/context'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    padding: '0% 10%',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    width: '100%',\n    fontSize: 20,\n  },\n}))\n\nconst initialForm = {\n  firstName: '',\n  lastName: '',\n  contactNumber: '',\n  notes: '',\n  metaData: {\n    avatarColor: '',\n    startTime: '',\n    endTime: '',\n    ticketNumber: '',\n  },\n}\n\nconst initialFill = {\n  firstName: false,\n  lastName: false,\n  contactNumber: false,\n}\n\nconst generateAvatarColor = () => {\n  // return a random integer from 0 - 4 for avatarColors array in CustomerCard.js\n  return Math.floor(Math.random() * 5)\n}\n\nexport default function AddCustomer() {\n  const classes = useStyles()\n  const { maxSlots, waitlist, addCustomer } = useWaitlist()\n  const [formData, setFormData] = React.useState(initialForm)\n  const [isFilled, setIsFilled] = React.useState(initialFill)\n  const [error, setError] = React.useState(false)\n  const [isNoSlots, setIsNoSlots] = React.useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (waitlist.length > maxSlots) {\n      setIsNoSlots(true)\n      setTimeout(() => {\n        setIsNoSlots(false)\n      }, 5000)\n      return\n    }\n\n    const error = Object.values(isFilled).some((field) => field === false)\n    if (error) {\n      setError(error)\n      return\n    }\n\n    formData.metaData.avatarColor = generateAvatarColor()\n    addCustomer(formData)\n\n    // re-initialise\n    setFormData(initialForm)\n    setIsFilled(initialFill)\n    setError(false)\n  }\n\n  const handleChange = (e) => {\n    const value = e.target.value\n    switch (e.target.id) {\n      case 'firstName':\n        setFormData({ ...formData, firstName: value })\n        setIsFilled({ ...isFilled, firstName: !!value })\n        break\n\n      case 'lastName':\n        setFormData({ ...formData, lastName: value })\n        setIsFilled({ ...isFilled, lastName: !!value })\n        break\n\n      case 'contact':\n        setFormData({ ...formData, contactNumber: value })\n        setIsFilled({ ...isFilled, contactNumber: !!value })\n        break\n\n      case 'notes':\n        setFormData({ ...formData, notes: value })\n        setIsFilled({ ...isFilled, notes: !!value })\n        break\n\n      default:\n        break\n    }\n  }\n\n  return (\n    <Container className={classes.container}>\n      <Typography variant='h4' gutterBottom>\n        Add a Customer to the Waitlist ⌛️\n      </Typography>\n      {isNoSlots && (\n        <Typography variant='body1' color='secondary'>\n          There are no more free slots! Please attend to existing customers first.\n        </Typography>\n      )}\n      <form className={classes.form} noValidate autoComplete='off' onSubmit={handleSubmit}>\n        <TextField\n          id='firstName'\n          label='First Name'\n          variant='outlined'\n          fullWidth\n          required\n          error={error && !isFilled.firstName}\n          helperText={error && !isFilled.firstName && 'This field is required!'}\n          value={formData.firstName}\n          onChange={handleChange}\n        />\n        <TextField\n          id='lastName'\n          label='Last Name'\n          variant='outlined'\n          fullWidth\n          required\n          error={error && !isFilled.lastName}\n          helperText={error && !isFilled.lastName && 'This field is required!'}\n          value={formData.lastName}\n          onChange={handleChange}\n        />\n        <TextField\n          id='contact'\n          label='Contact Number'\n          variant='outlined'\n          fullWidth\n          required\n          error={error && !isFilled.contactNumber}\n          helperText={error && !isFilled.contactNumber && 'This field is required!'}\n          value={formData.contactNumber}\n          onChange={handleChange}\n        />\n        <TextField\n          id='notes'\n          label='Notes'\n          variant='outlined'\n          multiline\n          rows={4}\n          fullWidth\n          value={formData.notes}\n          onChange={handleChange}\n        />\n\n        <Button\n          className={classes.button}\n          type='submit'\n          color='primary'\n          variant='contained'\n          size='large'\n          startIcon={<KeyboardArrowLeftIcon />}\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Add\n        </Button>\n      </form>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Search from '../components/Search'\nimport { useWaitlist, avatarColors } from '../hooks/context'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    alignSelf: 'center',\n  },\n  button: {\n    height: 54,\n    width: '100%',\n    alignSelf: 'center',\n    [theme.breakpoints.up('md')]: {\n      width: '20%',\n    },\n  },\n}))\n\nexport default function History() {\n  const classes = useStyles()\n  const [checked, setChecked] = React.useState([])\n  const { history, removeHistory } = useWaitlist()\n  const [value, setValue] = React.useState('')\n  const [filter, setFilter] = React.useState([])\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value)\n    const newChecked = [...checked]\n\n    if (currentIndex === -1) {\n      newChecked.push(value)\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n\n    setChecked(newChecked)\n  }\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleRemoveHistory = (e) => {\n    if (checked.length === 0) return\n    removeHistory(checked)\n  }\n\n  React.useEffect(() => {\n    setFilter(\n      history.filter((customer) => {\n        const { firstName, lastName, contactNumber, notes } = customer\n        const name = firstName + ' ' + lastName\n        const filterValue = value.toLowerCase().trim()\n\n        return (\n          name?.toString().toLowerCase().includes(filterValue) ||\n          contactNumber?.toString().toLowerCase().includes(filterValue) ||\n          notes?.toString().toLowerCase().includes(filterValue)\n        )\n      })\n    )\n  }, [history, value])\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          paddingBottom: '10px',\n          flexWrap: 'wrap',\n        }}\n      >\n        <Typography variant='h4' className={classes.title}>\n          Waitlist History\n        </Typography>\n        <Search\n          value={value}\n          onChange={handleChange}\n          placeholder='Search by Name, Contact Number or Notes'\n        />\n        <Button\n          className={classes.button}\n          color='secondary'\n          variant='contained'\n          size='large'\n          onClick={handleRemoveHistory}\n        >\n          Delete\n        </Button>\n      </div>\n      {filter.length > 0 && (\n        <List dense className={classes.root}>\n          {filter.map((customer) => {\n            const { firstName, lastName, contactNumber, notes, metaData } = customer\n            const { startTime, endTime, ticketNumber, avatarColor } = metaData\n            const startDate = new Date(startTime)\n            const endDate = new Date(endTime)\n            const waitingTime = Math.round((endDate - startDate) / 1000 / 60)\n            const labelId = `checkbox-list-label-${customer.metaData.ticketNumber}`\n            return (\n              <ListItem key={ticketNumber} button>\n                <ListItemAvatar>\n                  <Avatar\n                    aria-label='customer'\n                    style={{ backgroundColor: avatarColors[avatarColor] }}\n                  >\n                    {firstName.toString()[0].toUpperCase()}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  id={labelId}\n                  primary={`${firstName} ${lastName} - Ticket no. ${ticketNumber} `}\n                  secondary={`Waited: ${waitingTime} mins | Start: ${startDate.toLocaleString()} | End: ${endDate.toLocaleString()} | Contact Number: ${contactNumber} | Notes: ${\n                    notes || '-'\n                  }`}\n                />\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge='end'\n                    onChange={handleToggle(ticketNumber)}\n                    checked={checked.indexOf(ticketNumber) !== -1}\n                    inputProps={{ 'aria-labelledby': labelId }}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )\n          })}\n        </List>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Layout from './components/Layout'\nimport DisplayHomePage from './pages/DisplayHomePage'\nimport AddCustomer from './pages/AddCustomer'\nimport History from './pages/History'\nimport { WaitlistProvider } from './hooks/context'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { grey, red } from '@material-ui/core/colors'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: red[700],\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <WaitlistProvider>\n        <Router>\n          <Layout>\n            <Switch>\n              <Route exact path='/'>\n                <DisplayHomePage />\n              </Route>\n              <Route path='/addcustomer'>\n                <AddCustomer />\n              </Route>\n              <Route path='/history'>\n                <History />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </WaitlistProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}