{"version":3,"sources":["hooks/requests.js","hooks/context.js","components/DisplayFreeSlots.js","components/Layout.js","components/DeleteCustomer.js","components/CustomerCard.js","components/DisplayCustomers.js","pages/DisplayHomePage.js","pages/AddCustomer.js","App.js","index.js"],"names":["API_URL","httpGetWaitlist","a","fetch","response","json","WaitlistContext","React","WaitlistProvider","children","waitlist","setWaitlist","getWaitlist","fetchedWaitlist","value","Provider","useWaitlist","context","Error","displayName","Status","styled","Paper","textAlign","backgroundColor","theme","palette","secondary","main","height","width","lineHeight","fontSize","fontWeight","containerStyles","display","alignItems","marginLeft","DisplayFreeSlots","style","Typography","variant","paddingRight","length","drawerWidth","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","justifyContent","padding","mixins","content","flexGrow","appbar","alignSelf","Layout","classes","useTheme","history","useHistory","open","setOpen","menuItems","title","icon","path","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","onClick","edge","noWrap","Drawer","paper","direction","Divider","List","map","item","index","ListItem","button","push","ListItemIcon","ListItemText","primary","DeleteCustomer","handleDelete","avatarColors","pink","lime","indigo","orange","teal","maxWidth","boxShadow","grey","expand","transform","shortest","expandOpen","expandText","avatar","createData","key","CustomerCard","customer","avatarColor","expanded","setExpanded","firstName","lastName","startTime","endTime","contactNumber","notes","ticketNumber","startDate","Date","endDate","waitingTime","Math","round","rows","toLocaleString","Card","elevation","CardHeader","Avatar","action","subheader","CardContent","paddingBottom","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","TableContainer","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","row","border","component","scope","DisplayCustomers","breakpointCols","default","columnClassName","metaData","DisplayHomePage","Container","gutterBottom","form","margin","container","flexDirection","AddCustomer","noValidate","autoComplete","onSubmit","e","preventDefault","console","log","TextField","id","label","fullWidth","required","multiline","Button","type","size","startIcon","endIcon","createTheme","red","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f907f69.chunk.js","sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetWaitlist() {\n  const response = await fetch(`${API_URL}/waitlist`)\n  return await response.json()\n}\n\nexport { httpGetWaitlist }\n","import * as React from 'react'\nimport { httpGetWaitlist } from './requests'\n\nconst WaitlistContext = React.createContext()\nWaitlistContext.displayName = 'WaitlistContext'\n\nfunction WaitlistProvider({ children }) {\n  const [waitlist, setWaitlist] = React.useState([])\n\n  const getWaitlist = React.useCallback(async () => {\n    const fetchedWaitlist = await httpGetWaitlist()\n    setWaitlist(fetchedWaitlist)\n  }, [])\n\n  React.useEffect(() => {\n    getWaitlist()\n  }, [getWaitlist])\n\n  const value = [waitlist, setWaitlist]\n\n  return <WaitlistContext.Provider value={value}>{children}</WaitlistContext.Provider>\n}\n\nfunction useWaitlist() {\n  const context = React.useContext(WaitlistContext)\n  if (!context) {\n    throw new Error(`useWaitlist must be used within the WaitlistProvider`)\n  }\n  return context\n}\n\nexport { WaitlistProvider, useWaitlist }\n","import * as React from 'react'\nimport { useWaitlist } from '../hooks/context'\n\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { styled } from '@material-ui/core/styles'\n\nconst Status = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n  backgroundColor: theme.palette.secondary.main,\n  height: 40,\n  width: 40,\n  lineHeight: '40px',\n  fontSize: 25,\n  fontWeight: 600,\n}))\n\nconst containerStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n}\n\nconst maxQueueLength = 25\n\nexport default function DisplayFreeSlots() {\n  const [waitlist] = useWaitlist()\n  //todo: maybe change colors if free slots < 5 , < 10. < 15 ?\n  return (\n    <div style={containerStyles}>\n      <Typography variant='h6' style={{ paddingRight: 15 }}>\n        Free Slots\n      </Typography>\n      <Status>{maxQueueLength - waitlist.length}</Status>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport { useHistory } from 'react-router-dom'\nimport DisplayFreeSlots from './DisplayFreeSlots'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  appbar: {\n    alignSelf: 'stretch',\n    height: 'auto',\n  },\n}))\n\n// add search\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const menuItems = [\n    {\n      title: 'Dashboard',\n      icon: <DashboardIcon />,\n      path: '/',\n    },\n    {\n      title: 'Add Customer',\n      icon: <AddCircleIcon />,\n      path: '/addcustomer',\n    },\n  ]\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar className={classes.appBar}>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h5' noWrap>\n            Hotel California\n          </Typography>\n          <DisplayFreeSlots />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant='permanent'\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {menuItems.map((item, index) => (\n            <ListItem button key={item.title} onClick={() => history.push(item.path)}>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport default function DeleteCustomer() {\n  const handleDelete = () => {}\n\n  return (\n    <>\n      <IconButton aria-label='delete' onClick={() => handleDelete}>\n        <DeleteIcon />\n      </IconButton>\n    </>\n  )\n}\n","import * as React from 'react'\nimport clsx from 'clsx'\nimport DeleteCustomer from './DeleteCustomer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { pink, lime, indigo, orange, teal, grey } from '@material-ui/core/colors'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone'\nimport NotesIcon from '@material-ui/icons/Notes'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nconst avatarColors = [pink[500], lime[500], indigo[500], orange[500], teal[500]]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.2)',\n    '&:hover': {\n      backgroundColor: grey[50],\n    },\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  expandText: {\n    marginLeft: '68%',\n  },\n  avatar: {\n    backgroundColor: (color) => {\n      return avatarColors[color]\n    },\n  },\n}))\n\nfunction createData(key, value) {\n  if (!value) value = '-'\n  return { key, value }\n}\n\nexport default function CustomerCard({ customer, avatarColor }) {\n  const classes = useStyles(avatarColor)\n  const [expanded, setExpanded] = React.useState(false)\n  const { firstName, lastName, startTime, endTime, contactNumber, notes, ticketNumber } = customer\n  const startDate = new Date(startTime)\n  const endDate = endTime ? new Date(endTime) : new Date()\n  const waitingTime = Math.round((endDate - startDate) / 1000 / 60)\n\n  const rows = [\n    createData('Start Time', startDate.toLocaleString()),\n    createData('End Time', endTime ? endDate.toLocaleString() : ''),\n    createData('Waiting Time', waitingTime + ' mins'),\n    createData('Ticket no.', ticketNumber),\n  ]\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card className={classes.root} elevation={1}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label='recipe' className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        action={<DeleteCustomer />}\n        title={firstName + ' ' + lastName}\n        subheader={startDate.toLocaleString()}\n      />\n      <CardContent style={{ paddingBottom: 0 }}>\n        <div style={{ display: 'flex', alignItems: 'center', paddingBottom: '10px' }}>\n          <ContactPhoneIcon style={{ marginLeft: 7 }} />\n          <Typography variant='body2' style={{ marginLeft: 24 }}>\n            {contactNumber}\n          </Typography>\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <NotesIcon style={{ marginLeft: 7 }} />\n          <Typography variant='body2' style={{ marginLeft: 24 }}>\n            {notes}\n          </Typography>\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Typography variant='body2' className={classes.expandText}>\n          Details\n        </Typography>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label='show more'\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout='auto' unmountOnExit>\n        <CardContent>\n          <TableContainer>\n            <Table sx={{ minWidth: 650 }} aria-label='simple table'>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Metric</TableCell>\n                  <TableCell align='right'>Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow\n                    key={row.key}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell component='th' scope='row'>\n                      {row.key}\n                    </TableCell>\n                    <TableCell align='right'>{row.value}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Collapse>\n    </Card>\n  )\n}\n","import * as React from 'react'\nimport Masonry from 'react-masonry-css'\nimport CustomerCard from '../components/CustomerCard'\nimport { useWaitlist } from '../hooks/context'\n\nexport default function DisplayCustomers() {\n  const [waitlist] = useWaitlist()\n\n  const handleDelete = () => {}\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  }\n\n  return (\n    <Masonry\n      breakpointCols={breakpoints}\n      className='my-masonry-grid'\n      columnClassName='my-masonry-grid_column'\n    >\n      {waitlist.map((customer) => {\n        const avatarColor = customer.metaData.avatarColor\n        return (\n          <div key={customer.ticketNumber}>\n            <CustomerCard\n              customer={customer}\n              handleDelete={handleDelete}\n              avatarColor={avatarColor}\n            />\n          </div>\n        )\n      })}\n    </Masonry>\n  )\n}\n","import * as React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport DisplayCustomers from '../components/DisplayCustomers'\nimport { useWaitlist } from '../hooks/context'\n\nexport default function DisplayHomePage() {\n  const [waitlist] = useWaitlist()\n\n  return (\n    <Container>\n      <Container style={{ display: 'flex', alignItems: 'center', padding: 0 }}>\n        <Typography variant='h5' gutterBottom style={{ marginRight: '15px' }}>\n          Welcome!\n        </Typography>\n        <Typography variant='subtitle1' gutterBottom>\n          There are {waitlist.length} customers in queue.\n        </Typography>\n      </Container>\n      <DisplayCustomers />\n    </Container>\n  )\n}\n","import * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    padding: '0% 10%',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    width: '100%',\n    fontSize: 20,\n  },\n}))\n\nexport default function AddCustomer() {\n  const classes = useStyles()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('submitted')\n  }\n  //Todo: assign a randomcolor during card creation and read from customer metadata\n  //todo: add error prop & helperText for validation\n  return (\n    <Container className={classes.container}>\n      <Typography variant='h4' gutterBottom>\n        Add a Customer to the Waitlist ⌛️\n      </Typography>\n      <form className={classes.form} noValidate autoComplete='off' onSubmit={handleSubmit}>\n        <TextField id='firstName' label='First Name' variant='outlined' fullWidth required />\n        <TextField id='lastName' label='Last Name' variant='outlined' fullWidth required />\n        <TextField id='contact' label='Contact Number' variant='outlined' fullWidth required />\n        <TextField id='notes' label='Notes' variant='outlined' multiline rows={4} fullWidth />\n\n        <Button\n          className={classes.button}\n          type='submit'\n          color='primary'\n          variant='contained'\n          size='large'\n          startIcon={<KeyboardArrowLeftIcon />}\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Add\n        </Button>\n      </form>\n    </Container>\n  )\n}\n","import * as React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Layout from './components/Layout'\nimport DisplayHomePage from './pages/DisplayHomePage'\nimport AddCustomer from './pages/AddCustomer'\nimport { WaitlistProvider } from './hooks/context'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { grey, red } from '@material-ui/core/colors'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: red[700],\n    },\n  },\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <WaitlistProvider>\n        <Router>\n          <Layout>\n            <Switch>\n              <Route exact path='/'>\n                <DisplayHomePage />\n              </Route>\n              <Route path='/addcustomer'>\n                <AddCustomer />\n              </Route>\n            </Switch>\n          </Layout>\n        </Router>\n      </WaitlistProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}